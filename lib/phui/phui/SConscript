import os
pj = os.path.join

Import('baseEnv pkg')
Import('SetupCppDom SetupGLText SetupGLUT SetupSDL')

classes = Split("""
   Button
   CheckBox
   FlowLayout
   Insets
   Label
   LayoutManager
   ListBox
   Rect
   RootFactory
   RootWidget
   Size
   TextField
   Widget
   WidgetContainer
   Window
""")

sources = []

headers = Split("""
   ActionListener.h
   Color.h
   EmptyConstraint.h
   FlowVerticalConstraint.h
   Input.h
   LayoutConstraint.h
   ListSelectionListener.h
   Point.h
   WindowAdapter.h
   WindowListener.h
   phui.h
   phuiCommon.h
""")

sources.extend(map(lambda n: n + '.cpp', classes))
headers.extend(map(lambda n: n + '.h',   classes))


# Define the core library
core_env = baseEnv.Copy()
SetupCppDom(core_env)
SetupGLText(core_env)
core_lib = pkg.createSharedLibrary('phui', core_env)
core_lib.addSources(sources)
core_lib.addHeaders(headers, 'phui')
Export('core_lib')

# Define the SDL wrapper
sdl_env = baseEnv.Copy()
SetupSDL(sdl_env)
sdl_lib = pkg.createSharedLibrary('phuiSDL', sdl_env)
sdl_lib.addSources(['SDLBridge.cpp'])
sdl_lib.addHeaders(['SDLBridge.h'], 'phui')

# Define the GLUT wrapper
glut_env = baseEnv.Copy()
SetupGLUT(glut_env)
glut_lib = pkg.createSharedLibrary('phuiGLUT', glut_env)
glut_lib.addSources(['GLUTBridge.cpp'])
glut_lib.addHeaders(['GLUTBridge.h'], 'phui')

# Recurse
SConscript(dirs = ['layout'])
