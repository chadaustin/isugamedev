import os
pj = os.path.join

Import('baseEnv')

classes = Split("""
   Button
   CheckBox
   DriverManager
   FlowLayout
   Insets
   Label
   LayoutManager
   ListBox
   Rect
   RootFactory
   RootWidget
   Size
   TextField
   Widget
   WidgetContainer
   Window
""")

sources = []

headers = Split("""
   ActionListener.h
   Color.h
   EmptyConstraint.h
   FlowVerticalConstraint.h
   Input.h
   LayoutConstraint.h
   ListSelectionListener.h
   Point.h
   Utility.h
   WindowAdapter.h
   WindowListener.h
   phui.h
""")

sources.extend(map(lambda n: n + '.cpp', classes))
# For loki
sources.append(pj('#', 'external', 'include', 'loki', 'Singleton.cpp'))
sources.append(pj('#', 'external', 'include', 'loki', 'SmallObj.cpp'))
headers.extend(map(lambda n: n + '.h',   classes))


# Define the core library
core_env = baseEnv.Copy()

# Determine whether or not to compile in SDL support. 
if baseEnv.Dictionary()['sdl']:
   sources.append('SDLDriver.cpp')

# Determine whether or not to compile in GLUT support.
if baseEnv.Dictionary()['glut']:
   sources.append('GLUTDriver.cpp')
#SetupCppDom(core_env)
#SetupGLText(core_env)
core_lib = core_env.SharedLibrary('phui', sources)
Export('core_lib')

Alias('install', core_env.Install(pj(core_env['prefix'], 'lib'), core_lib))
for h in headers:
   Alias('install', core_env.Install(pj(core_env['prefix'], 'include', 'phui'), h))

# Define the Python module
# py_env = baseEnv.Copy()
# py_env.Append(LIBPATH   = ['#phui'],
#              LIBS      = ['phui'])
# SetupPython(py_env, '2.2')
# SetupBoostPython(py_env)
# py_env.SharedLibrary('phui', 'PythonAPI.cpp', SHLIBPREFIX='')

# Recurse
# SConscript(dirs = ['layout'])
