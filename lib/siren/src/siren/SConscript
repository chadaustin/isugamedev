import os
pj = os.path.join

Import('baseEnv pkg')
Import('SetupAudiere SetupCal3D SetupCorona SetupOpenGL SetupSDL')

# Define the sources
classes = Split("""
   Camera
   Kernel
   ResourceManager
   State
   StateFactory
   Texture
   Version
""")

headers = Split("""
   Export.h
   OpenGL.h
   siren.h
   Singleton.h
   Types.h
   Utility.h
""")
sources = []

headers.extend(map(lambda n: n + '.h',   classes))
sources.extend(map(lambda n: n + '.cpp', classes))

# Clone the environment
env = baseEnv.Copy()
SetupAudiere(env)
SetupCal3D(env)
SetupCorona(env)
SetupSDL(env)
env.Append(CPPPATH = Split('#src'))
lib = pkg.createSharedLibrary('siren', env)
#lib = pkg.createStaticLibrary('siren', env)
lib.addSources(sources)
lib.addHeaders(headers, 'siren')

Export('lib')

# Recurse
#subdirs = Split('avatar input loki sound python')
subdirs = Split('avatar input loki sound')
SConscript(dirs = subdirs)
