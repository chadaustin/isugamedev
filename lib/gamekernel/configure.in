
################### <GK heading BEGIN do not edit this line> #################
#
# gamekernel - a platform for running games
# gamekernel is (C) Copyright 2001-2002 by Kevin Meinert, Ben Scott
#
# Authors: Kevin Meinert <kevin@vrsource.org>
#          Ben Scott <bscott@iastate.edu>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# -----------------------------------------------------------------
# File:          $RCSfile: configure.in,v $
# Date modified: $Date: 2002-02-20 14:45:36 $
# Version:       $Revision: 1.8 $
# -----------------------------------------------------------------
#
################## <GK heading END do not edit this line> ###################
AC_REVISION($Revision: 1.8 $)
AC_INIT(gk/gkCommon.h)
AC_CONFIG_AUX_DIR(config)

GK_GEN_RECONFIG
GK_SET_TOPDIR

AC_CANONICAL_HOST

case $host_os in
   dnl irix
   irix*)
      OS_TYPE='UNIX'
      ;;
   dnl linux
   linux*)
      OS_TYPE='UNIX'
      ;;
   dnl unknown
   unknown)
      ;;
esac


###############################################################################
# Add arguments to configure
###############################################################################
AC_ARG_ENABLE(glutdriver,
   [  --enable-glutdriver     Enable the GLUT driver          [default=yes]],
   USE_GLUT_DRIVER="$withval", USE_GLUT_DRIVER='yes'
)

AC_ARG_ENABLE(sdldriver,
   [  --enable-sdldriver      Enable the SDL driver           [default=yes]],
   USE_SDL_DRIVER="$withval", USE_SDL_DRIVER='yes'
)


## TODO: autosearch for "dot" installed (for doxygen) this is a hack for now!!
AC_ARG_ENABLE(sdldriver,
   [  --enable-dot      Enable dot for doxygen           [default=no]],
   HAVE_DOT="$withval", HAVE_DOT='no'
)
if test "x$HAVE_DOT" != "xno"; then
   HAVE_DOT=YES
fi
if test "x$HAVE_DOT" == "xno"; then
   HAVE_DOT=NO
   echo "configure: warning: *** disabling dot in doxygen! use --enable-dot=yes to enable ***"
fi
AC_SUBST(HAVE_DOT)

###############################################################################
# Check for required programs
###############################################################################
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S

###############################################################################
# Check for required headers
###############################################################################
AC_HEADER_STDC

###############################################################################
# Check for required typedefs, structs and compiler characteristics
###############################################################################
AC_C_CONST
AC_C_INLINE


###############################################################################
# Check for libraries
###############################################################################
GK_HAVE_OPENGL(/usr, no,, AC_MSG_ERROR(*** OpenGL libraries not found ***))

# Check for GLUT
GK_HAVE_GLUT(/usr,
             HAVE_GLUT='Y',
             [ HAVE_GLUT='N'
               AC_MSG_WARN(*** GLUT libraries not found - disabling GLUT Driver ***)])

# Check for SDL
GK_HAVE_SDL(/usr,
            HAVE_SDL='Y',
            [ HAVE_SDL='N'
              AC_MSG_WARN(*** SDL libraries not found - disabling SDL Driver ***)])

# Test which drivers we want to build
BUILD_GLUT_DRIVER='N'
if test "x$USE_GLUT_DRIVER" == "xyes"; then
if test "x$HAVE_GLUT" == "xY"; then
   BUILD_GLUT_DRIVER='Y'
fi
fi

BUILD_SDL_DRIVER='N'
if test "x$USE_SDL_DRIVER" == "xyes"; then
if test "x$HAVE_SDL" == "xY"; then
   BUILD_SDL_DRIVER='Y'
fi
fi

###############################################################################
# Generate output
###############################################################################
OSTYPE_DEFS="-DUSE_${OS_TYPE}"
GLUT_LIBS="$GLUT_LDFLAGS $LIBGLUT"
OGL_LIBS="$OGL_LDFLAGS $LIBOPENGL"
SDL_LIBS="$SDL_LDFLAGS $LIBSDL"

INCLUDES="$INCLUDES $X_INCLUDES $OGL_INCLUDES"
LIBS="$LIBS $OGL_LDFLAGS $LIBOPENGL"
GK_DEFS="$OSTYPE_DEFS"

dnl GLUT driver setup
GLUT_DRIVER_INCLUDES="$X_INCLUDES $OGL_INCLUDES $GLUT_INCLUDES"
GLUT_DRIVER_LIBS="$GLUT_LDFLAGS $LIBGLUT $OGL_LDFLAGS $LIBOPENGL"
GLUT_DRIVER_DEFS="$OSTYPE_DEFS"

dnl SDL driver setup
SDL_DRIVER_INCLUDES="$X_INCLUDES $OGL_INCLUDES $SDL_INCLUDES"
SDL_DRIVER_LIBS="$SDL_LDFLAGS $LIBSDL $OGL_LDFLAGS $LIBOPENGL"
SDL_DRIVER_DEFS="$OSTYPE_DEFS"

dnl Setup output variables
GK_VERSION_GROK(VERSION)

AC_SUBST(INCLUDES)
AC_SUBST(LIBS)
AC_SUBST(GK_DEFS)
AC_SUBST(OSTYPE_DEFS)

AC_SUBST(OGL_INCLUDES)
AC_SUBST(OGL_LIBS)
AC_SUBST(GLUT_LIBS)
AC_SUBST(GLUT_INCLUDES)

AC_SUBST(GLUT_DRIVER_INCLUDES)
AC_SUBST(GLUT_DRIVER_LIBS)
AC_SUBST(GLUT_DRIVER_DEFS)

AC_SUBST(SDL_DRIVER_INCLUDES)
AC_SUBST(SDL_DRIVER_LIBS)
AC_SUBST(SDL_DRIVER_DEFS)

AC_SUBST(BUILD_GLUT_DRIVER)
AC_SUBST(BUILD_SDL_DRIVER)

dnl Generate makefiles
AC_OUTPUT(
   Makefile
   doc/Makefile
   doc/gk.doxy
   drivers/Makefile
   drivers/glut/Makefile
   drivers/sdl/Makefile
   gk/Makefile
   sample/Makefile
   sample/aster/Makefile
   sample/simple/Makefile
   test/Makefile
   test/input/Makefile
)
