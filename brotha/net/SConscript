Import('env')

classes = [
   'Connection',
   'MessageQueue',
   'ReadThread',
   'SocketInputStream',
   'SocketOutputStream',
   'WriteThread',
]

headers = [
   'AddObjMessage',
   'AddPlayerMessage',
   'ByteBuffer',
   'DelObjMessage',
   'DelPlayerMessage',
   'DisconnectMessage',
   'EnterMessage',
   'InputStream',
   'LoginMessage',
   'Message',
   'MessageReader',
   'MessageTypes',
   'NetMgr',
   'OKMessage',
   'OutputStream',
   'ResyncMessage',
   'Serialize',
   'ServerSocket',
   'SocketException',
   'Socket',
   'StreamException',
   'UpdateObjMessage',
   'UpdatePlayerInfoMessage',
   'UpdatePlayerMessage',
]

sources = [
]

# add proper extensions to filenames
headers = map(lambda fn: fn + '.h', headers)
sources = map(lambda fn: fn + '.cpp', sources)

# add in the files from classes
headers.extend( map(lambda fn: fn + '.h', classes) )
sources.extend( map(lambda fn: fn + '.cpp', classes) )

env.Library(target = 'net', source = sources)
