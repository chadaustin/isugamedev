################### <MK heading BEGIN do not edit this line> #################
#
# mk build system - really simple build system using GNU make
# mk is (C) Copyright 2001-2002 by Kevin Meinert, Patrick Hartling
#
# Authors: Kevin Meinert <kevin@vrsource.org>
#          Patrick Hartling <patrick@vrac.iastate.edu>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# -----------------------------------------------------------------
# File:          $RCSfile: mk.objs,v $
# Date modified: $Date: 2002-04-17 17:07:52 $
# Version:       $Revision: 1.1 $
# -----------------------------------------------------------------
#
################## <MK heading END do not edit this line> ###################

# If no object directory is being used, set it to the current directory.
OBJDIR		?= .
DEPDIR		?= .

# Define the list of supported source file suffixes.
_suffix_list = c C CC cc cpp c++ cxx

# Loop over the suffixes, translate them to $(OBJECT_EXT) and store the
# result in $(OBJS).
makeobjs = $(filter %$(OBJ_FILE_SUFFIX), $(foreach _suffix, $(_suffix_list), $(1:.$(_suffix)=$(OBJ_FILE_SUFFIX))))

# add a directory prefix to each source file
# OBJS := ${addprefix ${OBJDIR}/,$(SRCS)}
# Construct $(OBJS) from $(SRCS) using the makeobjs function.
OBJS = $(call makeobjs, $(SRCS))

# Rules for compiling
CREATE_OBJ_FILE_COMMAND = $(CXX_COMPILE) $(CXX_FLAGS) $(DEFS) $(INCLUDE_PATHS) $< $(OUTPUT_OBJ_FLAG)$@
CREATE_OBJ_FILE_COMMAND_C = $(C_COMPILE) $(C_FLAGS) $(DEFS) $(INCLUDE_PATHS) $< $(OUTPUT_OBJ_FLAG)$@

$(OBJDIR)/%$(OBJ_FILE_SUFFIX): %.c
	$(CREATE_OBJ_FILE_COMMAND_C)

$(OBJDIR)/%$(OBJ_FILE_SUFFIX): %.cxx
	$(CREATE_OBJ_FILE_COMMAND)

$(OBJDIR)/%$(OBJ_FILE_SUFFIX): %.c++
	$(CREATE_OBJ_FILE_COMMAND)

$(OBJDIR)/%$(OBJ_FILE_SUFFIX): %.cc
	$(CREATE_OBJ_FILE_COMMAND)

$(OBJDIR)/%$(OBJ_FILE_SUFFIX): %.C
	$(CREATE_OBJ_FILE_COMMAND)

$(OBJDIR)/%$(OBJ_FILE_SUFFIX): %.cpp
	$(CREATE_OBJ_FILE_COMMAND)

$(OBJDIR)/%$(OBJ_FILE_SUFFIX): %.C
	$(CREATE_OBJ_FILE_COMMAND)

# Search path for source code and object files.
vpath
vpath %.c ${PATH_TO_SRCS}
vpath %.C ${PATH_TO_SRCS}
vpath %.cpp ${PATH_TO_SRCS}
vpath %.cxx ${PATH_TO_SRCS}
vpath %.c++ ${PATH_TO_SRCS}
vpath %.cc ${PATH_TO_SRCS}
vpath %${OBJ_FILE_SUFFIX} ${OBJDIR}
