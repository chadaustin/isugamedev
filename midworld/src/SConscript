from os import path

Import('baseEnv PREFIX BuildInfo')
Import('SetupSDL SetupCorona SetupAudiere SetupGLText SetupOpenSG SetupOpenGL')

interfaces = Split("""
   CollisionDetector
   CollisionListener
   Entity
   SceneListener
   SceneViewer
   SpatialIndex
   Weapon
""")

classes = Split("""
   AbstractEntity
   Application
   BaseProjectileWeapon
   BoundsCollisionDetector
   Camera
   CollisionDesc
   CreditsState
   Enemy
   GameManager
   GameState
   IntroState
   Jukebox
   MenuState
   ModelManager
   OpenSGSceneViewer
   Player
   ResourceManager
   RigidBody
   Scene
   SceneEvent
   Shotgun
   State
   StateFactory
   SoundEffectManager
   SoundManager
   SpreadGun
   Texture
   cubeGeometry
""")

buildInfo = BuildInfo()
buildInfo.addHeaders(map(File, Split("""
   AssaultRifle.h
   BaseBullet.h
   CollisionEvent.h
   NullCollisionDetector.h
   UIDManager.h
   VectorSpatialIndex.h
   Version.h
""")))

buildInfo.addSources(map(File, Split("""
   Main.cpp
""")))

buildInfo.addExtraDist(map(File, Split("""
   SConscript
""")))

buildInfo.addHeaders(map(lambda n: File(n + '.h'),    interfaces))
buildInfo.addHeaders(map(lambda n: File(n + '.h'),    classes))
buildInfo.addSources(map(lambda n: File(n + '.cpp'),  classes))

env = baseEnv.Copy()
SetupSDL(env)
SetupCorona(env)
SetupAudiere(env)
SetupGLText(env)
SetupOpenSG(env)
SetupOpenGL(env)

buildInfo.addPrograms([
    env.Program('../build/midworld', buildInfo.getSources())
])
env.Install(path.join(PREFIX, 'bin'), buildInfo.getPrograms())

Return('buildInfo')
